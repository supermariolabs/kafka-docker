version: "3.8"
networks:
  kafka-net:
    ipam:
      config:
        - subnet: 20.19.0.0/16

services:
  kafka1:
    container_name: kafka1
    image: my/kafkacluster
    build: 
      context: .
    ports:
        - "9092:9092"
    restart: always
    networks:
      kafka-net:
        ipv4_address: 20.19.0.11
    volumes:
    - ./config/kafka1/server.properties:/kafka/config/server.properties
    - ./data/kafka1/:/data/kafka/
  
  kafka2:
    container_name: kafka2
    image: my/kafkacluster
    build: 
      context: .
    ports:
        - "9292:9092"
    restart: always
    networks:
      kafka-net:
        ipv4_address: 20.19.0.12
    volumes:
    - ./config/kafka2/server.properties:/kafka/config/server.properties
    - ./data/kafka2/:/data/kafka/
  
  kafka3:
    container_name: kafka3
    image: my/kafkacluster
    build: 
      context: .
    ports:
        - "9392:9092"
    restart: always
    networks:
      kafka-net:
        ipv4_address: 20.19.0.13
    volumes:
    - ./config/kafka3/server.properties:/kafka/config/server.properties
    - ./data/kafka3/:/data/kafka/
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    hostname: kafka-ui
    environment:
      - "KAFKA_CLUSTERS_0_NAME=Dev"
      - "KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092,kafka2:9092,kafka3:9092"
    ports:
      - 9999:8080
    restart: always
    networks:
      kafka-net:
        ipv4_address: 20.19.0.14
    depends_on:
      - kafka1
      - kafka2
      - kafka3

  app:
    image: eclipse-temurin:17-jdk-focal
    hostname: app
    restart: always
    networks:
      kafka-net:
        ipv4_address: 20.19.0.15
    ports:
      - 1010:8080
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    volumes:
      - /Users/mario/Dev/Leonardo/kafka-docker/kafkademo/target/kafkademo-0.0.1-SNAPSHOT.jar:/tmp/kafkademo-0.0.1-SNAPSHOT.jar
    entrypoint: >
      java -jar /tmp/kafkademo-0.0.1-SNAPSHOT.jar